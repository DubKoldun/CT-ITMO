1) Считать 1 строчку
1.1) Грамматика для 1 строки ( * - expr (через запятую) ... турникет ... expr )
2) В конце Main вызываем функцию (loop), while е случится конец input
Функция
считываю строку
пытаюсь добавить в док-во
либо до конца input 
либо ошибка доказательства

Приколюхи:
(рис.1)
hypot: Map1: expr -> Int - гипотеза и веде в индекс
result: expr 
Map2: expr -> (Int, exprType) - корректные выражения и ведет в индекс
exprType = MP
         | Hypot
         | Ax
Map3: expr1 -> [(expr2,int)] (массив пар) - ищем expr1 смотрим как доказывается и ищем во 2 мапе (корректных выражений) наш expr2 
и формируем MP (index Map3, index Map2)

refactor all str
 if in Map2 -> continue; 
 check Ax (check подстановка)
 check hyp (check Map1)
 check MP (check Map3)

toList Map2 and sort

last expr is it proof ? (check)

IntMap (put n)
begin
 put only keys
 

run from endOfList 
 if MP put IntMap 2 index

run from beginOfList 
 save missed
 + IntMap normalize index
 check MP
 delete from List ifn IntMap
 
run output List

tips:

1)
Not worked:

if A,B турникет A
A
B
A -> not in map 

2)
use konsp from 11 year
 


